{"version":3,"sources":["API/useContry.js","API/DataPerDay.js","API/createCompareData.js","components/CountrySelect.js","components/NavBar.js","components/Paper.js","components/MultiDataPaper.js","components/Papers.js","components/RegularGraph.js","components/Headline.js","views/Application.js","API/useData.js","API/getCountryList.js","App.js","serviceWorker.js","index.js"],"names":["getCountry","country","a","axios","get","then","res","undefined","data","temp","i","Israel","length","key","push","confirmed","deaths","recovered","catch","err","console","error","DataPerDay","Data","date","createCompareData","countryData","countryName","obj","useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","CountrySelect","React","memo","props","classes","useState","sessionStorage","getItem","item","setCountry","Consumer","store","FormControl","variant","className","InputLabel","id","Select","labelId","value","onChange","event","target","arr","dispatch","type","payload","reload","window","location","label","MenuItem","list","map","country1","root","position","flexGrow","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","ackgroundColor","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","menuButtonHidden","title","drawerPaper","whiteSpace","drawerPaperClose","appBarSpacer","content","top","container","paddingTop","paddingBottom","NavBar","selection","setSelection","open","setOpen","indexN","setIndexN","handleDrawerOpen","handleDrawerClose","CssBaseline","AppBar","clsx","Toolbar","IconButton","edge","color","aria-label","onClick","Typography","component","noWrap","Drawer","paper","drawerContainer","List","text","index","ListItem","button","choice","countries","ListItemText","primary","Divider","changeCountry","getState","Container","children","depositContext","flex","overflow","flexDirection","textAlign","maxWidth","MyPaper","Fragment","Paper","elevation","gutterBottom","innerWidth","number","toLocaleString","table","MultiDataPaper","setData","setCountries","subscribe","log","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","scope","Papers","Array","isArray","Grid","xs","colorArray","RegularGraph","daily","forceUpdate","setValue","useForceUpdate","compareDataDay","compareDataReg","height","right","left","bottom","strokeDasharray","dataKey","hide","stroke","dot","strokeWidth","name","Headline","headline","setHeadline","backdrop","reducer","state","action","indexOfData","obj1","pop","Application","dataC","setDataC","useEffect","useData","createStore","CountryList","useCountryList","md","lg","Stype","App","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.180530c1.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport async function getCountry(country) {\n  // eslint-disable-next-line\n\n  const data = await axios\n    .get(\"https://pomber.github.io/covid19/timeseries.json\")\n    .then((res) => {\n      if (country !== null && country !== undefined && country !== \"Global\") {\n        return res.data[country];\n      } else {\n        const temp = [];\n        for (let i = 0; i < res.data.Israel.length; i++) {\n          for (const key in res.data) {\n            if (key === \"Afghanistan\") {\n              temp.push(res.data[key][i]);\n            } else {\n              temp[i].confirmed += res.data[key][i].confirmed;\n              temp[i].deaths += res.data[key][i].deaths;\n              temp[i].recovered += res.data[key][i].recovered;\n            }\n          }\n        }\n        return temp;\n      }\n    })\n    .catch((err) => {\n      console.error(err);\n    });\n  return data;\n}\n","export function DataPerDay(Data) {\n  if (Data === null) {\n    return null;\n  }\n  const temp = [];\n  for (let i = 0; i < Data.length; i++) {\n    if (i === 0) {\n      temp.push(Data[i]);\n    } else {\n      temp.push({\n        date: Data[i].date,\n        confirmed: Data[i].confirmed - Data[i - 1].confirmed,\n        deaths: Data[i].deaths - Data[i - 1].deaths,\n        recovered: Data[i].recovered - Data[i - 1].recovered,\n      });\n    }\n  }\n  return temp;\n}\n","export function createCompareData(Data, countryData, countryName) {\n  const temp = [];\n  for (let i = 0; i < countryData.length; i++) {\n    let obj = Data[i] ? Data[i] : {};\n    obj[countryName + \"_confirmed\"] = countryData[i].confirmed;\n    obj[countryName + \"_deaths\"] = countryData[i].deaths;\n    obj[countryName + \"_recovered\"] = countryData[i].recovered;\n    obj[\"date\"] = countryData[i].date;\n    temp.push(obj);\n  }\n  return temp;\n}\n","import React, { useState } from \"react\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport { ReactReduxContext } from \"react-redux\";\nimport { getCountry } from \"../API\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 160,\n  },\n}));\n\nconst CountrySelect = React.memo((props) => {\n  const classes = useStyles();\n  const [country, setCountry] = useState(sessionStorage.getItem(props.item));\n\n  return (\n    <ReactReduxContext.Consumer>\n      {({ store }) => {\n        // do something with the store here\n        return (\n          <FormControl variant=\"outlined\" className={classes.formControl}>\n            <InputLabel id=\"demo-simple-select-outlined-label\">\n              Country\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              value={country}\n              onChange={(event) => {\n                setCountry(event.target.value);\n\n                let obj = {};\n                obj[\"countries\"] = [event.target.value];\n                obj[\"indexOfData\"] = props.id;\n                getCountry(event.target.value).then((arr) => {\n                  obj[\"countryData\"] = [arr];\n                  store.dispatch({\n                    type: props.payload,\n                    payload: obj,\n                  });\n                });\n\n                if (props.reload) {\n                  window.location.reload();\n                }\n              }}\n              label=\"Country\"\n            >\n              <MenuItem value=\"Global\">\n                <em>Global</em>\n              </MenuItem>\n              {props.list.list.map((country1) => {\n                return <MenuItem value={country1}>{country1}</MenuItem>;\n              })}\n            </Select>\n          </FormControl>\n        );\n      }}\n    </ReactReduxContext.Consumer>\n  );\n});\nexport default CountrySelect;\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport CountrySelect from \"../components/CountrySelect\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport clsx from \"clsx\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport Container from \"@material-ui/core/Container\";\nimport { ReactReduxContext } from \"react-redux\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport { getCountry } from \"../API\";\nimport RemoveCircleIcon from \"@material-ui/icons/RemoveCircle\";\nconst drawerWidth = 190;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: \"relative\",\n    flexGrow: 1,\n    display: \"flex\",\n  },\n\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: \"0 8px\",\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    ackgroundColor: \"#0392D0\",\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: \"none\",\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    // overflowX: \"hidden\",\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: 1,\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    top: \"200vh\",\n    // overflow: \"auto\",\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n}));\n\nexport default function NavBar(props) {\n  const classes = useStyles();\n  const [selection, setSelection] = useState(null);\n  const [open, setOpen] = React.useState(false);\n  const [indexN, setIndexN] = useState(1);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <ReactReduxContext.Consumer>\n      {({ store }) => {\n        return (\n          <div className={classes.root}>\n            <CssBaseline />\n            <AppBar\n              position=\"absolute\"\n              className={clsx(classes.appBar, open && classes.appBarShift)}\n            >\n              <Toolbar className={classes.toolbar}>\n                <IconButton\n                  edge=\"start\"\n                  color=\"inherit\"\n                  aria-label=\"open drawer\"\n                  onClick={handleDrawerOpen}\n                  className={clsx(\n                    classes.menuButton,\n                    open && classes.menuButtonHidden\n                  )}\n                >\n                  <MenuIcon />\n                </IconButton>\n                <Typography\n                  component=\"h1\"\n                  variant=\"h6\"\n                  color=\"inherit\"\n                  noWrap\n                  className={classes.title}\n                >\n                  COVID 19 Stats\n                </Typography>\n              </Toolbar>\n            </AppBar>\n            <Drawer\n              variant=\"permanent\"\n              classes={{\n                paper: clsx(\n                  classes.drawerPaper,\n                  !open && classes.drawerPaperClose\n                ),\n              }}\n              open={open}\n            >\n              <div className={classes.toolbarIcon}>\n                <IconButton onClick={handleDrawerClose}>\n                  <ChevronLeftIcon />\n                </IconButton>\n              </div>\n              <div className={classes.drawerContainer}>\n                <List>\n                  {[\"Global Stats\", \"Country Stats\", \"Country Compare\"].map(\n                    (text, index) => (\n                      <ListItem\n                        button\n                        key={text}\n                        onClick={() => {\n                          setSelection(text);\n                          store.dispatch({\n                            type: \"Change_Choice\",\n                            payload: { choice: text },\n                          });\n                          if (text === \"Global Stats\") {\n                            getCountry(\"Global\").then((arr) => {\n                              store.dispatch({\n                                type: \"Select_One_Country\",\n                                payload: {\n                                  countries: [\"Global\"],\n                                  countryData: [arr],\n                                },\n                              });\n                            });\n                          }\n                        }}\n                      >\n                        <ListItemText primary={text} />\n                      </ListItem>\n                    )\n                  )}\n                </List>\n                <Divider />\n                {selection === \"Country Stats\" && (\n                  <List>\n                    <ListItem>\n                      <CountrySelect\n                        item=\"countryDisplay\"\n                        list={props.list}\n                        payload=\"Select_One_Country\"\n                        changeCountry={props.changeCountry}\n                      />\n                    </ListItem>\n                  </List>\n                )}\n                {selection === \"Country Compare\" && (\n                  <List>\n                    <ListItem>\n                      <CountrySelect\n                        item=\"countryDisplay\"\n                        list={props.list}\n                        payload=\"Select_One_Country\"\n                        id={0}\n                      />\n                    </ListItem>\n                    <ListItem>\n                      <CountrySelect\n                        item=\"secondCountryDisplay\"\n                        list={props.list}\n                        payload=\"Add_Country\"\n                        id={1}\n                      />\n                    </ListItem>\n                    {indexN >= 2 && (\n                      <ListItem>\n                        <CountrySelect\n                          item=\"secondCountryDisplay\"\n                          list={props.list}\n                          payload=\"Add_Country\"\n                          id={2}\n                        />\n                      </ListItem>\n                    )}\n                    {indexN >= 3 && (\n                      <ListItem>\n                        <CountrySelect\n                          item=\"secondCountryDisplay\"\n                          list={props.list}\n                          payload=\"Add_Country\"\n                          id={3}\n                        />\n                      </ListItem>\n                    )}\n                    {indexN >= 4 && (\n                      <ListItem>\n                        <CountrySelect\n                          item=\"secondCountryDisplay\"\n                          list={props.list}\n                          payload=\"Add_Country\"\n                          id={4}\n                        />\n                      </ListItem>\n                    )}\n                    {indexN < 4 && (\n                      <IconButton\n                        color=\"primary\"\n                        onClick={() => {\n                          setIndexN(indexN + 1);\n                        }}\n                      >\n                        <AddCircleIcon />\n                      </IconButton>\n                    )}\n\n                    {indexN > 1 && (\n                      <IconButton\n                        color=\"primary\"\n                        onClick={() => {\n                          if (\n                            indexN ===\n                            store.getState().countries.length - 1\n                          ) {\n                            store.dispatch({ type: \"Remove_Country\" });\n                          }\n                          setIndexN(indexN - 1);\n                        }}\n                      >\n                        <RemoveCircleIcon />\n                      </IconButton>\n                    )}\n                  </List>\n                )}\n              </div>\n            </Drawer>\n\n            <div className={classes.content}>\n              <div className={classes.appBarSpacer} />\n              <Container className={classes.container}>\n                {props.children}\n              </Container>\n            </div>\n          </div>\n        );\n      }}\n    </ReactReduxContext.Consumer>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst useStyles = makeStyles((theme) => ({\n  depositContext: {\n    flex: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n    textAlign: \"center\",\n    maxWidth: \"200\",\n  },\n}));\n\nconst MyPaper = React.memo((props) => {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <Paper elevation={5} className={classes.paper}>\n        <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n          {props.title}\n        </Typography>\n        <Typography\n          component=\"p\"\n          variant={window.innerWidth < 500 ? \"h6\" : \"h4\"}\n        >\n          {props.number.toLocaleString()}\n        </Typography>\n        <Typography color=\"textSecondary\" className={classes.depositContext}>\n          {props.date}\n        </Typography>\n      </Paper>\n    </React.Fragment>\n  );\n});\nexport default MyPaper;\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport MyPaper from \"./Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { ReactReduxContext } from \"react-redux\";\nconst useStyles = makeStyles((theme) => ({\n  depositContext: {\n    flex: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n    textAlign: \"center\",\n    maxWidth: \"200\",\n  },\n  table: {\n    minWidth: 200,\n  },\n}));\n\nconst MultiDataPaper = React.memo((props) => {\n  let temp = [];\n  props.data.map((arr) => {\n    temp.push(arr[arr.length - 1]);\n  });\n  const [data, setData] = useState(temp);\n  const [countries, setCountries] = useState([props.country]);\n  const classes = useStyles();\n  return (\n    <ReactReduxContext.Consumer>\n      {({ store }) => {\n        store.subscribe(() => {\n          setCountries(store.getState().countries);\n          console.log(data);\n          let temp = [];\n          store.getState().countryData.map((data) => {\n            temp.push(data[data.length - 1]);\n          });\n          setData(temp);\n          console.log(data);\n          console.log(store.getState().countryData);\n        });\n\n        return (\n          <React.Fragment>\n            <TableContainer component={Paper}>\n              <Table className={classes.table} aria-label=\"simple table\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell>\n                      <Typography\n                        component=\"h3\"\n                        variant=\"h7\"\n                        color=\"primary\"\n                        gutterBottom\n                      >\n                        Countries\n                      </Typography>\n                    </TableCell>\n                    <TableCell align=\"right\">\n                      {\" \"}\n                      <Typography\n                        component=\"h3\"\n                        variant=\"h7\"\n                        color=\"primary\"\n                        gutterBottom\n                      >\n                        Confirmed\n                      </Typography>\n                    </TableCell>\n                    <TableCell align=\"right\">\n                      {\" \"}\n                      <Typography\n                        component=\"h3\"\n                        variant=\"h7\"\n                        color=\"primary\"\n                        gutterBottom\n                      >\n                        Deaths\n                      </Typography>\n                    </TableCell>\n                    <TableCell align=\"right\">\n                      {\" \"}\n                      <Typography\n                        component=\"h3\"\n                        variant=\"h7\"\n                        color=\"primary\"\n                        gutterBottom\n                      >\n                        Recovered\n                      </Typography>\n                    </TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {data.map((obj, index) => (\n                    <TableRow key={countries[index]}>\n                      <TableCell component=\"th\" scope=\"row\">\n                        <Typography\n                          component=\"h3\"\n                          variant=\"h7\"\n                          color=\"primary\"\n                          gutterBottom\n                        >\n                          {countries[index]}\n                        </Typography>\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <Typography component=\"h3\" variant=\"h7\" gutterBottom>\n                          {obj.confirmed.toLocaleString()}\n                        </Typography>\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <Typography component=\"h3\" variant=\"h7\" gutterBottom>\n                          {obj.deaths.toLocaleString()}\n                        </Typography>\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <Typography component=\"h3\" variant=\"h7\" gutterBottom>\n                          {obj.recovered.toLocaleString()}\n                        </Typography>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </React.Fragment>\n        );\n      }}\n    </ReactReduxContext.Consumer>\n  );\n});\nexport default MultiDataPaper;\n","import React, { useState } from \"react\";\nimport MyPaper from \"./Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { ReactReduxContext } from \"react-redux\";\nimport MultiDataPaper from \"./MultiDataPaper\";\nconst Papers = function Papers(props) {\n  const [data, setData] = useState(props.Data[0][props.Data[0].length - 1]);\n  const [country, setCountry] = useState();\n  return (\n    <ReactReduxContext.Consumer>\n      {({ store }) => {\n        store.subscribe(() => {\n          setCountry(store.getState().countries[0]);\n          if (Array.isArray(store.getState().countryData[0])) {\n            setData(\n              store.getState().countryData[0][\n                store.getState().countryData[0].length - 1\n              ]\n            );\n          } else {\n            store.getState().countryData[0].then((arr) => {\n              setData(arr[arr.length - 1]);\n            });\n          }\n        });\n        if (store.getState().choice !== \"Country Compare\") {\n          return (\n            <Grid container spacing={2}>\n              <Grid item xs={4}>\n                <MyPaper\n                  title=\"Confirmed\"\n                  number={data ? data.confirmed : \"loading\"}\n                  date={data ? data.date : \"loading\"}\n                />\n              </Grid>\n              <Grid item xs={4}>\n                <MyPaper\n                  title=\"Deaths\"\n                  number={data ? data.deaths : \"loading\"}\n                  date={data ? data.date : \"loading\"}\n                />\n              </Grid>\n              <Grid item xs={4}>\n                <MyPaper\n                  title=\"Recovered\"\n                  number={data ? data.recovered : \"loading\"}\n                  date={data ? data.date : \"loading\"}\n                />\n              </Grid>\n            </Grid>\n          );\n        } else {\n          {\n            return <MultiDataPaper data={props.Data} country={country} />;\n          }\n        }\n      }}\n    </ReactReduxContext.Consumer>\n  );\n};\nexport default Papers;\n","import React, { useState } from \"react\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { ReactReduxContext } from \"react-redux\";\nimport { createCompareData, DataPerDay } from \"../API\";\nvar colorArray = [\n  \"#FF6633\",\n\n  \"#CC80CC\",\n  \"#66664D\",\n  \"#991AFF\",\n  \"#E666FF\",\n  \"#4DB3FF\",\n  \"#FFB399\",\n  \"#FF33FF\",\n  \"#FFFF99\",\n  \"#00B3E6\",\n  \"#E6B333\",\n  \"#3366E6\",\n  \"#999966\",\n  \"#99FF99\",\n  \"#B34D4D\",\n  \"#80B300\",\n  \"#809900\",\n  \"#E6B3B3\",\n  \"#6680B3\",\n  \"#66991A\",\n  \"#FF99E6\",\n  \"#CCFF1A\",\n  \"#FF1A66\",\n  \"#E6331A\",\n  \"#33FFCC\",\n  \"#66994D\",\n  \"#B366CC\",\n  \"#4D8000\",\n  \"#B33300\",\n  \"#CC80CC\",\n  \"#66664D\",\n  \"#991AFF\",\n  \"#E666FF\",\n  \"#4DB3FF\",\n  \"#1AB399\",\n  \"#E666B3\",\n  \"#33991A\",\n  \"#CC9999\",\n  \"#B3B31A\",\n  \"#00E680\",\n  \"#4D8066\",\n  \"#809980\",\n  \"#E6FF80\",\n  \"#1AFF33\",\n  \"#999933\",\n  \"#FF3380\",\n  \"#CCCC00\",\n  \"#66E64D\",\n  \"#4D80CC\",\n  \"#9900B3\",\n  \"#E64D66\",\n  \"#4DB380\",\n  \"#FF4D4D\",\n  \"#99E6E6\",\n  \"#6666FF\",\n];\n\nconst useStyles = makeStyles((theme) => ({\n  depositContext: {\n    flex: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n    textAlign: \"center\",\n    maxWidth: \"200\",\n  },\n}));\nfunction useForceUpdate() {\n  const [value, setValue] = useState(0); // integer state\n  return () => setValue((value) => ++value); // update the state to force render\n}\n\nconst RegularGraph = function RegularGraph(props) {\n  const [data, setData] = useState(\n    createCompareData(\n      [],\n      props.daily ? DataPerDay(props.Data) : props.Data,\n      \"Global\"\n    )\n  );\n  const [countries, setCountries] = useState([\"Global\"]);\n  const forceUpdate = useForceUpdate();\n  const classes = useStyles();\n  return (\n    <ReactReduxContext.Consumer>\n      {({ store }) => {\n        store.subscribe(() => {\n          setCountries(store.getState().countries);\n\n          let temp = [];\n          if (store.getState().countries.length === 1) {\n            if (Array.isArray(store.getState().countryData[0])) {\n              let arr = store.getState().countryData;\n\n              for (let i = 0; i < arr.length; i++) {\n                temp = createCompareData(\n                  temp,\n                  props.daily ? DataPerDay(arr[i]) : arr[i],\n                  store.getState().countries[i]\n                );\n              }\n              setData(temp);\n            } else {\n              for (let i = 0; i < store.getState().countryData.length; i++) {\n                store.getState().countryData[i].then((arr) => {\n                  temp = createCompareData(\n                    temp,\n                    props.daily ? DataPerDay(arr) : arr,\n                    store.getState().countries[i]\n                  );\n\n                  setData(temp);\n                });\n              }\n            }\n          } else {\n            setData(\n              props.daily\n                ? store.getState().compareDataDay\n                : store.getState().compareDataReg\n            );\n            forceUpdate();\n          }\n        });\n\n        return (\n          <Paper elevation={3} className={classes.paper}>\n            <h2>{props.label}</h2>\n            <ResponsiveContainer height={300} width=\"100%\">\n              <LineChart\n                data={data}\n                height={300}\n                width={370}\n                margin={{\n                  top: 5,\n                  right: 30,\n                  left: 20,\n                  bottom: 5,\n                }}\n              >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"date\"></XAxis>\n                <YAxis hide={true} />\n                <Tooltip />\n                <Legend />\n\n                {countries.map((country, index) => {\n                  return (\n                    <Line\n                      type=\"monotone\"\n                      dataKey={country + \"_\" + props.type}\n                      stroke={colorArray[index + 6]}\n                      dot={false}\n                      strokeWidth={3}\n                      name={country}\n                    />\n                  );\n                })}\n              </LineChart>\n            </ResponsiveContainer>\n          </Paper>\n        );\n      }}\n    </ReactReduxContext.Consumer>\n  );\n};\nexport default RegularGraph;\n","import React, { useState } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { ReactReduxContext } from \"react-redux\";\n\nfunction Headline(props) {\n  const [headline, setHeadline] = useState(\"Global\");\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      <ReactReduxContext.Consumer>\n        {({ store }) => {\n          store.subscribe(() => {\n            setHeadline(\n              store.getState().countries[1]\n                ? store.getState().choice\n                : store.getState().countries[0]\n            );\n          });\n        }}\n      </ReactReduxContext.Consumer>\n      {headline}\n    </Typography>\n  );\n}\nexport default Headline;\n","import React from \"react\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { useCountryList, useData, DataPerDay, createCompareData } from \"../API\";\n\nimport NavBar from \"../components/NavBar\";\nimport Papers from \"../components/Papers\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport RegularGraph from \"../components/RegularGraph\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Headline from \"../components/Headline\";\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n  },\n  drawer: {},\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: \"#fff\",\n  },\n}));\n//Reducer\nfunction reducer(state, action) {\n  let obj = {};\n  switch (action.type) {\n    case \"Select_One_Country\":\n      obj.countries = action.payload.countries;\n      obj.countryData = action.payload.countryData;\n      obj.choice = state.choice;\n      obj.compareDataReg = createCompareData(\n        [],\n        obj.countryData[0],\n        obj.countries[0]\n      );\n      obj.compareDataDay = createCompareData(\n        [],\n        DataPerDay(obj.countryData[0]),\n        obj.countries[0]\n      );\n      return obj;\n    case \"Change_Choice\":\n      obj = action.payload;\n      obj.countries = state.countries;\n      obj.countryData = state.countryData;\n      return obj;\n    case \"Add_Country\":\n      obj = state;\n      obj.countries[action.payload.indexOfData] = action.payload.countries[0];\n      obj.countryData[action.payload.indexOfData] =\n        action.payload.countryData[0];\n\n      obj.compareDataReg = createCompareData(\n        state.compareDataReg,\n        action.payload.countryData[0],\n        action.payload.countries[0]\n      );\n      obj.compareDataDay = createCompareData(\n        state.compareDataDay,\n        DataPerDay(action.payload.countryData[0]),\n        action.payload.countries[0]\n      );\n      return obj;\n    case \"Remove_Country\":\n      let obj1 = {};\n\n      obj1.countries = state.countries;\n      obj1.countries.pop();\n      obj1.countryData = state.countryData;\n      obj1.countryData.pop();\n      obj1.compareDataDay = state.compareDataDay;\n      obj1.compareDataReg = state.compareDataReg;\n      obj1.choice = state.choice;\n\n      return obj1;\n\n    default:\n      return state;\n  }\n}\n//main App\nconst Application = function Application() {\n  const classes = useStyles();\n  //GlobalData\n  const Data = useData(\"Global\");\n  //setting redux\n  const store = createStore(reducer, {\n    choice: \"Global Stats\",\n    countries: [\"Global\"],\n    countryData: [Data],\n  });\n\n  const CountryList = useCountryList();\n\n  return (\n    <React.Fragment>\n      <Provider store={store}>\n        <NavBar className={classes.appBar} list={CountryList}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <Headline />\n              <Divider />\n            </Grid>\n            <Grid item xs={12}>\n              {store.getState().countryData[0] ? (\n                <Papers Data={store.getState().countryData} />\n              ) : (\n                \"Loading\"\n              )}\n            </Grid>\n          </Grid>\n          <br />\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <Typography\n                component=\"h2\"\n                variant=\"h6\"\n                color=\"primary\"\n                gutterBottom\n              >\n                Overall Stats\n              </Typography>\n              <Divider />\n            </Grid>\n            <Grid item xs={12} md={6} lg={4}>\n              {store.getState().countryData[0] ? (\n                <RegularGraph\n                  Data={store.getState().countryData[0]}\n                  type=\"confirmed\"\n                  label=\"Total Confirmed\"\n                  stroke=\"#FFAE00\"\n                />\n              ) : (\n                \"\"\n              )}\n            </Grid>\n            <Grid item xs={12} md={6} lg={4}>\n              {store.getState().countryData[0] ? (\n                <RegularGraph\n                  Data={store.getState().countryData[0]}\n                  type=\"deaths\"\n                  Stype={\n                    sessionStorage.getItem(\"secondCountryDisplay\") + \"_deaths\"\n                  }\n                  label=\"Total Deaths\"\n                  stroke=\"#FF0000\"\n                />\n              ) : (\n                \"\"\n              )}\n            </Grid>\n            <Grid item xs={12} md={6} lg={4}>\n              {store.getState().countryData[0] ? (\n                <RegularGraph\n                  Data={store.getState().countryData[0]}\n                  type=\"recovered\"\n                  Stype={\n                    sessionStorage.getItem(\"secondCountryDisplay\") +\n                    \"_recovered\"\n                  }\n                  label=\"Total Recovered\"\n                  stroke=\"#00FF2A \"\n                />\n              ) : (\n                \"\"\n              )}\n            </Grid>\n          </Grid>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <Typography\n                component=\"h2\"\n                variant=\"h6\"\n                color=\"primary\"\n                gutterBottom\n              >\n                Daily Stats\n              </Typography>\n              <Divider />\n            </Grid>\n            <Grid item xs={12} md={6} lg={4}>\n              {store.getState().countryData[0] ? (\n                <RegularGraph\n                  Data={store.getState().countryData[0]}\n                  type=\"confirmed\"\n                  Stype={\n                    sessionStorage.getItem(\"secondCountryDisplay\") +\n                    \"_confirmed\"\n                  }\n                  daily={true}\n                  label=\"Daily Confirmed\"\n                  stroke=\"#FFAE00\"\n                />\n              ) : (\n                \"\"\n              )}\n            </Grid>\n            <Grid item xs={12} md={6} lg={4}>\n              {store.getState().countryData[0] ? (\n                <RegularGraph\n                  Data={store.getState().countryData[0]}\n                  type=\"deaths\"\n                  Stype={\n                    sessionStorage.getItem(\"secondCountryDisplay\") + \"_deaths\"\n                  }\n                  daily={true}\n                  label=\"Daily Deaths\"\n                  stroke=\"#FF0000\"\n                />\n              ) : (\n                \"\"\n              )}\n            </Grid>\n            <Grid item xs={12} md={6} lg={4}>\n              {store.getState().countryData[0] ? (\n                <RegularGraph\n                  Data={store.getState().countryData[0]}\n                  type=\"recovered\"\n                  Stype={\n                    sessionStorage.getItem(\"secondCountryDisplay\") +\n                    \"_recovered\"\n                  }\n                  daily={true}\n                  label=\"Daily Recovered\"\n                  stroke=\"#00FF2A \"\n                />\n              ) : (\n                \"\"\n              )}\n            </Grid>\n          </Grid>\n        </NavBar>\n      </Provider>\n    </React.Fragment>\n  );\n};\n\nexport default Application;\n","import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nexport function useData(country) {\n  const [dataC, setDataC] = useState(null);\n\n  useEffect(() => {\n    const temp = [];\n    axios\n      .get(\"https://pomber.github.io/covid19/timeseries.json\")\n      .then((res) => {\n        if (country !== undefined && country !== \"Global\") {\n          setDataC(res.data[country]);\n        } else {\n          for (let i = 0; i < res.data.Israel.length; i++) {\n            for (const key in res.data) {\n              if (key === \"Afghanistan\") {\n                temp.push(res.data[key][i]);\n              } else {\n                temp[i].confirmed += res.data[key][i].confirmed;\n                temp[i].deaths += res.data[key][i].deaths;\n                temp[i].recovered += res.data[key][i].recovered;\n              }\n            }\n          }\n          setDataC(temp);\n        }\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }, [country]);\n  return dataC;\n}\n","import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nexport function useCountryList() {\n  const [dataC, setDataC] = useState(null);\n\n  useEffect(() => {\n    const temp = { list: [] };\n    axios\n      .get(\"https://pomber.github.io/covid19/timeseries.json\")\n      .then((res) => {\n        for (var key in res.data) {\n          temp.list.push(key);\n        }\n        setDataC(temp);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }, []);\n  return dataC;\n}\n","import React from \"react\";\nimport Application from \"./views/Application\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Application />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
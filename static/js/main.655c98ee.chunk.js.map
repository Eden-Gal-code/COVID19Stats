{"version":3,"sources":["API/DataPerDay.js","API/createCompareData.js","components/CountrySelect.js","components/NavBar.js","components/Paper.js","components/Papers.js","components/RegularGraph.js","views/Application.js","API/getCountryList.js","API/useData.js","API/useContry.js","App.js","serviceWorker.js","index.js"],"names":["DataPerDay","Data","temp","i","length","push","date","confirmed","deaths","recovered","createCompareData","countryData","confirmed1","deaths1","recovered1","useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","CountrySelect","React","memo","props","classes","useState","sessionStorage","getItem","item","country","setCountry","FormControl","variant","className","InputLabel","id","Select","labelId","value","onChange","event","target","setItem","reload","window","location","label","MenuItem","list","map","country1","root","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","ackgroundColor","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","appBarSpacer","content","top","overflow","container","paddingTop","paddingBottom","NavBar","selection","setSelection","open","setOpen","CssBaseline","AppBar","clsx","Toolbar","IconButton","edge","color","aria-label","onClick","Typography","component","noWrap","Drawer","paper","drawerContainer","List","text","index","ListItem","button","key","ListItemText","primary","Divider","Container","children","depositContext","flex","flexDirection","textAlign","maxWidth","MyPaper","Fragment","Paper","elevation","gutterBottom","number","toLocaleString","Papers","data","Grid","xs","RegularGraph","height","right","left","bottom","strokeDasharray","dataKey","hide","type","stroke","dot","strokeWidth","hasOwnProperty","Stype","backdrop","Application","console","log","CountryList","dataC","setDataC","useEffect","axios","get","then","res","catch","err","error","useCountryList","Israel","useData","secondCountryData","useCountry","removeItem","md","lg","App","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.655c98ee.chunk.js","sourcesContent":["export function DataPerDay(Data) {\n  if (Data === null) {\n    return null;\n  }\n  const temp = [];\n  for (let i = 0; i < Data.length; i++) {\n    if (i === 0) {\n      temp.push(Data[i]);\n    } else {\n      temp.push({\n        date: Data[i].date,\n        confirmed: Data[i].confirmed - Data[i - 1].confirmed,\n        deaths: Data[i].deaths - Data[i - 1].deaths,\n        recovered: Data[i].recovered - Data[i - 1].recovered,\n      });\n    }\n  }\n  return temp;\n}\n","export function createCompareData(Data, countryData) {\n  if (countryData === null) {\n    return Data;\n  }\n  const temp = [];\n  for (let i = 0; i < Data.length; i++) {\n    temp.push({\n      date: Data[i].date,\n      confirmed: Data[i].confirmed,\n      deaths: Data[i].deaths,\n      recovered: Data[i].recovered,\n      confirmed1: countryData[i].confirmed,\n      deaths1: countryData[i].deaths,\n      recovered1: countryData[i].recovered,\n    });\n  }\n  return temp;\n}\n","import React, { useState } from \"react\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 160,\n  },\n}));\n\nconst CountrySelect = React.memo((props) => {\n  const classes = useStyles();\n  const [country, setCountry] = useState(sessionStorage.getItem(props.item));\n\n  return (\n    <FormControl variant=\"outlined\" className={classes.formControl}>\n      <InputLabel id=\"demo-simple-select-outlined-label\">Country</InputLabel>\n      <Select\n        labelId=\"demo-simple-select-outlined-label\"\n        id=\"demo-simple-select-outlined\"\n        value={country}\n        onChange={(event) => {\n          setCountry(event.target.value);\n          sessionStorage.setItem(props.item, event.target.value);\n          if (props.reload) {\n            window.location.reload();\n          }\n        }}\n        label=\"Country\"\n      >\n        <MenuItem value=\"\">\n          <em>Global</em>\n        </MenuItem>\n        {props.list.list.map((country1) => {\n          return <MenuItem value={country1}>{country1}</MenuItem>;\n        })}\n      </Select>\n    </FormControl>\n  );\n});\nexport default CountrySelect;\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport CountrySelect from \"../components/CountrySelect\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport clsx from \"clsx\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport Container from \"@material-ui/core/Container\";\nconst drawerWidth = 190;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: \"0 8px\",\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    ackgroundColor: \"#0392D0\",\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: \"none\",\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: \"hidden\",\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: 0,\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    top: \"200vh\",\n    overflow: \"auto\",\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n}));\n\nexport default function NavBar(props) {\n  const classes = useStyles();\n  const [selection, setSelection] = useState(null);\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"absolute\"\n        className={clsx(classes.appBar, open && classes.appBarShift)}\n      >\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(\n              classes.menuButton,\n              open && classes.menuButtonHidden\n            )}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography\n            component=\"h1\"\n            variant=\"h6\"\n            color=\"inherit\"\n            noWrap\n            className={classes.title}\n          >\n            COVID 19 Stats\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <div className={classes.drawerContainer}>\n          <List>\n            {[\"Global Stats\", \"Country Stats\", \"Country Compare\"].map(\n              (text, index) => (\n                <ListItem\n                  button\n                  key={text}\n                  onClick={() => {\n                    setSelection(text);\n                    sessionStorage.setItem(\"selection\", text);\n                    if (text === \"Global Stats\") {\n                      sessionStorage.setItem(\"countryDisplay\", \"\");\n                      window.location.reload();\n                    }\n                  }}\n                >\n                  <ListItemText primary={text} />\n                </ListItem>\n              )\n            )}\n          </List>\n          <Divider />\n          {selection === \"Country Stats\" && (\n            <List>\n              <ListItem>\n                <CountrySelect\n                  item=\"countryDisplay\"\n                  list={props.list}\n                  reload={true}\n                />\n              </ListItem>\n            </List>\n          )}\n          {selection === \"Country Compare\" && (\n            <List>\n              <ListItem>\n                <CountrySelect\n                  item=\"countryDisplay\"\n                  list={props.list}\n                  reload={false}\n                />\n              </ListItem>\n              <ListItem>\n                <CountrySelect\n                  item=\"secondCountryDisplay\"\n                  list={props.list}\n                  reload={true}\n                />\n              </ListItem>\n            </List>\n          )}\n        </div>\n      </Drawer>\n\n      <div className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container className={classes.container}>{props.children}</Container>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst useStyles = makeStyles((theme) => ({\n  depositContext: {\n    flex: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n    textAlign: \"center\",\n    maxWidth: \"200\",\n  },\n}));\n\nconst MyPaper = React.memo((props) => {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <Paper elevation={5} className={classes.paper}>\n        <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n          {props.title}\n        </Typography>\n        <Typography component=\"p\" variant=\"h5\">\n          {props.number.toLocaleString()}\n        </Typography>\n        <Typography color=\"textSecondary\" className={classes.depositContext}>\n          {props.date}\n        </Typography>\n      </Paper>\n    </React.Fragment>\n  );\n});\nexport default MyPaper;\n","import React from \"react\";\nimport MyPaper from \"./Paper\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst Papers = React.memo(function Papers(props) {\n  const data = props.Data[props.Data.length - 1];\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={4}>\n        <MyPaper\n          title=\"Confirmed\"\n          number={data ? data.confirmed : \"loading\"}\n          date={data ? data.date : \"loading\"}\n        />\n      </Grid>\n      <Grid item xs={4}>\n        <MyPaper\n          title=\"Deaths\"\n          number={data ? data.deaths : \"loading\"}\n          date={data ? data.date : \"loading\"}\n        />\n      </Grid>\n      <Grid item xs={4}>\n        <MyPaper\n          title=\"Recovered\"\n          number={data ? data.recovered : \"loading\"}\n          date={data ? data.date : \"loading\"}\n        />\n      </Grid>\n    </Grid>\n  );\n});\nexport default Papers;\n","import React from \"react\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  depositContext: {\n    flex: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n    textAlign: \"center\",\n    maxWidth: \"200\",\n  },\n}));\nconst RegularGraph = React.memo(function RegularGraph(props) {\n  const data = props.Data;\n\n  const classes = useStyles();\n  return (\n    <Paper elevation={3} className={classes.paper}>\n      <h2>{props.label}</h2>\n      <ResponsiveContainer height={300} width=\"100%\">\n        <LineChart\n          data={data}\n          height={300}\n          width={370}\n          margin={{\n            top: 5,\n            right: 30,\n            left: 20,\n            bottom: 5,\n          }}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"date\"></XAxis>\n          <YAxis hide={true} />\n          <Tooltip />\n          <Legend />\n          <Line\n            type=\"monotone\"\n            dataKey={props.type}\n            stroke={props.stroke}\n            dot={false}\n            strokeWidth={3}\n          />\n          {data[0].hasOwnProperty(props.Stype) && (\n            <Line\n              type=\"monotone\"\n              dataKey={props.Stype}\n              stroke=\"#581845\"\n              dot={false}\n              strokeWidth={3}\n            />\n          )}\n        </LineChart>\n      </ResponsiveContainer>\n    </Paper>\n  );\n});\nexport default RegularGraph;\n","import React from \"react\";\nimport {\n  useCountryList,\n  useData,\n  DataPerDay,\n  useCountry,\n  createCompareData,\n} from \"../API\";\nimport NavBar from \"../components/NavBar\";\nimport Papers from \"../components/Papers\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport RegularGraph from \"../components/RegularGraph\";\nimport Grid from \"@material-ui/core/Grid\";\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n  },\n  drawer: {},\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: \"#fff\",\n  },\n}));\nconst Application = React.memo(function Application() {\n  const classes = useStyles();\n  console.log(\"rendered\");\n  const CountryList = useCountryList();\n  const Data = useData(sessionStorage.getItem(\"countryDisplay\"));\n  const secondCountryData = useCountry(\n    sessionStorage.getItem(\"secondCountryDisplay\")\n  );\n\n  if (sessionStorage.getItem(\"selection\") === \"Country Stats\") {\n    sessionStorage.removeItem(\"secondCountryDisplay\");\n  }\n  if (sessionStorage.getItem(\"selection\") === \"Global Stats\") {\n    sessionStorage.removeItem(\"secondCountryDisplay\");\n  }\n\n  return (\n    <React.Fragment>\n      <NavBar className={classes.appBar} list={CountryList}>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            {Data ? <Papers Data={Data} /> : \"Loading\"}\n          </Grid>\n        </Grid>\n        <br />\n        <Grid container spacing={2}>\n          <Grid item xs={12} md={6} lg={4}>\n            {Data ? (\n              <RegularGraph\n                Data={createCompareData(Data, secondCountryData)}\n                type=\"confirmed\"\n                Stype=\"confirmed1\"\n                label=\"Total Confirmed\"\n                stroke=\"#FFAE00\"\n              />\n            ) : (\n              \"\"\n            )}\n          </Grid>\n          <Grid item xs={12} md={6} lg={4}>\n            {Data ? (\n              <RegularGraph\n                Data={createCompareData(Data, secondCountryData)}\n                type=\"deaths\"\n                Stype=\"deaths1\"\n                label=\"Total Deaths\"\n                stroke=\"#FF0000\"\n              />\n            ) : (\n              \"\"\n            )}\n          </Grid>\n          <Grid item xs={12} md={6} lg={4}>\n            {Data ? (\n              <RegularGraph\n                Data={createCompareData(Data, secondCountryData)}\n                type=\"recovered\"\n                Stype=\"recovered1\"\n                label=\"Total Recovered\"\n                stroke=\"#00FF2A \"\n              />\n            ) : (\n              \"\"\n            )}\n          </Grid>\n        </Grid>\n        <Grid container spacing={2}>\n          <Grid item xs={12} md={6} lg={4}>\n            {Data ? (\n              <RegularGraph\n                Data={createCompareData(\n                  DataPerDay(Data),\n                  DataPerDay(secondCountryData)\n                )}\n                type=\"confirmed\"\n                Stype=\"confirmed1\"\n                label=\"Daily Confirmed\"\n                stroke=\"#FFAE00\"\n              />\n            ) : (\n              \"\"\n            )}\n          </Grid>\n          <Grid item xs={12} md={6} lg={4}>\n            {Data ? (\n              <RegularGraph\n                Data={createCompareData(\n                  DataPerDay(Data),\n                  DataPerDay(secondCountryData)\n                )}\n                type=\"deaths\"\n                Stype=\"deaths1\"\n                label=\"Daily Deaths\"\n                stroke=\"#FF0000\"\n              />\n            ) : (\n              \"\"\n            )}\n          </Grid>\n          <Grid item xs={12} md={6} lg={4}>\n            {Data ? (\n              <RegularGraph\n                Data={createCompareData(\n                  DataPerDay(Data),\n                  DataPerDay(secondCountryData)\n                )}\n                type=\"recovered\"\n                Stype=\"recovered1\"\n                label=\"Daily Recovered\"\n                stroke=\"#00FF2A \"\n              />\n            ) : (\n              \"\"\n            )}\n          </Grid>\n        </Grid>\n      </NavBar>\n    </React.Fragment>\n  );\n});\n\nexport default Application;\n","import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nexport function useCountryList() {\n  const [dataC, setDataC] = useState(null);\n\n  useEffect(() => {\n    const temp = { list: [] };\n    axios\n      .get(\"https://pomber.github.io/covid19/timeseries.json\")\n      .then((res) => {\n        for (var key in res.data) {\n          temp.list.push(key);\n        }\n        setDataC(temp);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }, []);\n  return dataC;\n}\n","import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nexport function useData(country) {\n  const [dataC, setDataC] = useState(null);\n\n  useEffect(() => {\n    const temp = [];\n    axios\n      .get(\"https://pomber.github.io/covid19/timeseries.json\")\n      .then((res) => {\n        if (country) {\n          setDataC(res.data[country]);\n        } else {\n          for (let i = 0; i < res.data.Israel.length; i++) {\n            for (const key in res.data) {\n              if (key === \"Afghanistan\") {\n                temp.push(res.data[key][i]);\n              } else {\n                temp[i].confirmed += res.data[key][i].confirmed;\n                temp[i].deaths += res.data[key][i].deaths;\n                temp[i].recovered += res.data[key][i].recovered;\n              }\n            }\n          }\n          setDataC(temp);\n        }\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }, [country]);\n  return dataC;\n}\n","import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nexport function useCountry(country) {\n  const [dataC, setDataC] = useState(null);\n  // eslint-disable-next-line\n  useEffect(() => {\n    axios\n      .get(\"https://pomber.github.io/covid19/timeseries.json\")\n      .then((res) => {\n        if (country !== null) {\n          setDataC(res.data[country]);\n        }\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }, [country]);\n  if (country === null) {\n    return null;\n  }\n  return dataC;\n}\n","import React from \"react\";\nimport Application from \"./views/Application\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Application />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}